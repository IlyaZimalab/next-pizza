generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  fullname String
  email    String   @unique
  password String
  role     UserRole @default(USER)
  verified DateTime

  provider   String?
  providerId String?

  cart             Cart?
  order            Order[]
  verificationCode verificationCode?

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())

  name     String    @unique
  products Product[]
}

model Product {
  id Int @id @default(autoincrement())

  name     String
  imageUrl String
  isPizza  Boolean? @default(false)

  ingredients Ingredient[]
  items       ProductItem[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model ProductItem {
  id Int @id @default(autoincrement())

  price     Int
  size      Int?
  pizzaType Int?

  cartItems CartItem[]

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Ingredient {
  id Int @id @default(autoincrement())

  name     String
  price    Int
  imageUrl String

  products Product[]
  carItems CartItem[]

  createAt DateTime @default(now())
  updateat DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  items CartItem[]

  token String

  totalAmount Int @default(0)

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  quantity Int @default(1)

  ingredients Ingredient[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token String

  totalAmount Int
  status      OrderStatus
  paymentId   String?

  items Json

  fullName String
  email    String
  phone    String
  address  String
  comment  String?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model verificationCode {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code String

  createAt DateTime @default(now())

  @@unique([userId, code])
}

enum UserRole {
  USER
  ADMIN
}

enum OrderStatus {
  PENDIG
  SUCCEEDED
  CANCELED
}
